# imagenet layers definition

[data]
type=data
dataIdx=0

[labels]
type=data
dataIdx=1

#------------first layer--------------
# input : 224 x 224 x 3
[conv1]
type=conv
inputs=data
channels=3
filters=48
padding=1
stride=4
filterSize=11
initW=0.01
#initW=0.0001
sharedBiases=1
partialSum=5
neuron=relu
# output: 55 x 55 x 48

[pool1]
type=pool
pool=max
inputs=conv1
start=0
sizeX=3
stride=2
outputsX=0
channels=48
# output: 27 x 27 x 48

[rnorm1]
type=cmrnorm
inputs=pool1
channels=48
size=5
# output: 27 x 27 x 48

#------------second layer--------------
[conv2]
type=conv
inputs=rnorm1
groups=4
channels=48
filters=32
padding=2
stride=1
filterSize=5
neuron=relu
initW=0.01
initB=1
partialSum=1
randSparse=true
filterChannels=12
# output: 27 x 27 x 128

[pool2]
type=pool
pool=max
inputs=conv2
start=0
sizeX=3
stride=2
outputsX=0
channels=128
# output: 13 x 13 x 128

[rnorm2]
type=cmrnorm
inputs=pool2
channels=128
size=5
# output: 13 x 13 x 128

#------------third layer--------------
[conv3]
type=conv
inputs=rnorm2
groups=4
channels=128
filters=32
padding=1
stride=1
filterSize=3
neuron=relu
initW=0.01
initB=1
partialSum=1
randSparse=1
filterChannels=64
#output: 13 x 13 x 128

[pool3]
type=pool
pool=max
inputs=conv3
start=0
sizeX=3
stride=2
outputsX=0
channels=128
# output: 6 x 6 x 128

#------------fourth layer----------------
[fc4]
type=fc
# Should be however many classes the net learns
outputs=71
inputs=pool3
initW = 0.01

[probs]
type=softmax
inputs=fc4

[logprob]
type=cost.logreg
inputs=labels,probs
